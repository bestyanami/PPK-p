name: Test Flask Application

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.2.0'
        
    - name: Install R dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev libssl-dev libxml2-dev
        R -e 'install.packages(c("shiny", "ggplot2", "dplyr", "readr", "markdown"), repos="https://cloud.r-project.org/")'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        export R_HOME=$(R RHOME)
        echo "R_HOME=$R_HOME" >> $GITHUB_ENV
        sudo apt-get install -y python3-dev
        pip install -r requirements.txt
        
    - name: Test application startup
      run: |
        export R_HOME=$(R RHOME)
        mkdir -p PKdata PKModelLibrary PKBaseModelFolder PKObjResultsFolder PKCovariatesFolder PKPEResultsFolder PKDrawingFolder PLModelFolder PLData
        
        # 添加测试数据和模型（如果需要的话）
        echo "# 示例模型文件" > PKModelLibrary/example_model.R
        
        python -c "from app import app; import threading; threading.Thread(target=lambda: app.run(debug=False, host='0.0.0.0')).start()" &
        APP_PID=$!
        
        sleep 3
        RESPONSE=$(curl --retry 10 --retry-delay 1 --retry-connrefused --max-time 5 -s -o /dev/null -w "%{http_code}" http://localhost:5000/)
        echo "收到HTTP响应码: $RESPONSE"

        if ps -p $APP_PID > /dev/null; then
          echo "终止Flask进程 PID: $APP_PID"
          kill $APP_PID
        fi
        pkill -f "python -c.*app.run" || true
        
        # 检查响应码是否为200或302（重定向到登录页）
        if [ "$RESPONSE" = "200" ] || [ "$RESPONSE" = "302" ]; then
          echo "应用程序启动成功，状态码: $RESPONSE"
        else
          echo "应用程序测试失败，状态码: $RESPONSE"
          exit 100
        fi